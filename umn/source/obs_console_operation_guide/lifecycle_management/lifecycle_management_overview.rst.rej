diff a/umn/source/obs_console_operation_guide/lifecycle_management/lifecycle_management_overview.rst b/umn/source/obs_console_operation_guide/lifecycle_management/lifecycle_management_overview.rst	(rejected hunks)
@@ -13,25 +13,27 @@ Lifecycle management means periodically deleting objects in a bucket or transiti
 
    **Figure 1** Lifecycle management
 
-Lifecycle management applies to the following scenarios:
+You may configure lifecycle rules to:
 
--  Some periodically uploaded files need only to be retained for one week or one month, and can be deleted once they have expired.
--  Documents are seldom accessed after a certain period of time. These files need to be transitioned to **Warm** or **Cold** storage or be deleted.
+-  Periodically delete logs that are only meant to be retained for a specific period of time (a week or a month).
+-  Transition documents that are seldom accessed to the Warm or Cold storage class or delete them.
 
-You can define lifecycle rules for identifying objects and manage lifecycles of the objects based on the rules.
+You can define lifecycle rules for your scenarios similar to those mentioned above to better manage your objects.
 
-You can identify what objects in your bucket will be infrequently accessed, and then configure lifecycle rules to transition them to the Warm or Cold storage class to save storage costs. In short, transition basically means that the object storage class is altered without copying the object. You can also manually change the storage class of an object on the Objects page. For details, see :ref:`Uploading an Object <en-us_topic_0045853663>`.
+You can configure lifecycle rules for objects that will no longer be frequently accessed to transition them to the Warm or Cold storage class as needed. This can help reduce costs on storage. In short, transition basically means that the object storage class is altered without copying the object. You can also manually change the storage class of an object on the Objects page. For details, see :ref:`Uploading an Object <en-us_topic_0045853663>`.
 
-Lifecycle rules have two key elements:
+Lifecycle rules have the following key elements:
 
--  Configuration policy:
+-  Policy
 
-   You can also specify the prefix of object names so that objects whose names have this prefix are restricted by the rules. You can configure a lifecycle rule for a bucket so that all objects in the bucket can be restricted by the lifecycle rule.
+   You can specify an object name prefix to apply a lifecycle rule to a set of objects. You can also apply a lifecycle rule to the entire bucket (including the objects in it).
 
--  Time: You can specify the number of days after which objects that have been last updated and meet specified conditions are automatically transitioned to **Warm** or **Cold**. Or you can specify an expiration time after which objects are automatically deleted.
+-  Time
 
-   -  **Transition to Warm**: You can specify the number of days after which objects that have been last updated and meet specified conditions are automatically transitioned to **Warm**.
-   -  **Transition to Cold**: You can specify the number of days after which objects that have been last updated and meet specified conditions are automatically transitioned to **Cold**.
-   -  Expiration time: You can specify the number of days after which objects are automatically deleted or the day after which an object that matches with a rule is deleted.
+   You can specify the number of days after which objects that have been last updated and meet specified conditions are automatically transitioned to Warm or Cold, or are expired and then deleted.
 
-The previous number of days for objects to be transitioned to **Warm** is at least 30. If objects are configured to change to both **Warm** and **Cold**, the number of days for transition to **Cold** must be at least 30 days later than that for transition to **Warm**. For example, if the number of days for transition to **Warm** is 33, that for transition to **Cold** must be 63 at least. If only transition to **Cold** is enabled and transition to **Warm** is disabled, there is no limit on the number of days for transition. The expiration time must be greater than the two transition times.
+   -  Transition to Warm: This defines the number of days since the last object update after which objects meeting specified conditions are automatically transitioned to the Warm storage class.
+   -  Transition to Cold: This defines the number of days since the last object update after which objects meeting specified conditions are automatically transitioned to the Cold storage class.
+   -  Expiration time: This defines the number of days since the last object update after which objects meeting specified conditions are automatically expired and then deleted.
+
+Objects can be transitioned to Warm at least 30 days after their last update. If you configure to transition objects first to Warm and then Cold, the objects must stay Warm at least 30 days before they can be transitioned to Cold. For example, if you configure to transition objects to Warm 33 days after their last update, the objects can be transitioned to Cold at least 63 days after their last update. If only transition to Cold is used, but transition to Warm is not, there is no limit on the number of days for transition. The number set for expiration time must be larger than that specified for any of the transition operations.
